pipeline {
    agent any
    stages {
        stage('Checkout GIT') {
            steps {
                echo 'Pulling...'
                git branch: 'louay', url: 'https://github.com/lawi55/kaddem'
            }
        }

        stage('Send Email Notification') {
            steps {
                script {
                    // Envoi d'un email de notification
                    mail to: 'louay.sejine@esprit.tn',
                         subject: 'Jenkins Notification: Pipeline en cours...',
                         body: 'Un nouveau pipeline est en cours d\'execution !'
                }
            }
        }
        stage('Security Scan: Nmap') {
            steps {
                echo "Starting Nmap security scan..."
                sh 'nmap -sT -p 1-65535 -v 192.168.33.10'
            }
        }
        stage('Compile Code') {
            steps {
                sh 'mvn clean compile'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh "mvn sonar:sonar -Dsonar.projectKey=JenkinsFile -Dsonar.host.url=http://192.168.33.10:9000 -Dsonar.login=${SONAR_TOKEN}"
                }
            }
        }
        stage('Deploy to Nexus') {
            steps {
                sh 'mvn deploy -DskipTests -DaltDeploymentRepository=deploymentRepo::default::http://192.168.33.10:8081/repository/maven-releases/'
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t lawi55/kaddem:0.0.1 .'
            }
        }
        stage('Push Docker Image to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials-id', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh '''
                        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                        docker tag lawi55/kaddem:0.0.1 lawi55/kaddem:latest
                        docker push lawi55/kaddem:0.0.1
                        docker push lawi55/kaddem:latest
                    '''
                }
            }
        }

        stage('Clean Up Previous Containers') {
            steps {
                script {
                    // Removes all containers related to this project to avoid conflicts
                    sh 'docker-compose down -v || true'
                }
            }
        }
        stage('Run Docker Compose') {
            steps {
                script {
                    sh '''
                        docker-compose up -d
                        docker-compose ps
                    '''
                }
            }
        }
        stage('Check and Start Prometheus') {
            steps {
                script {
                    def prometheusRunning = sh(script: 'docker ps -q -f name=prometheus', returnStdout: true).trim()
                    if (prometheusRunning) {
                        echo 'Prometheus is already running.'
                    } else {
                        echo 'Starting Prometheus container...'
                        sh 'docker start prometheus'
                    }
                }
            }
        }
        stage('Check and Start Grafana') {
            steps {
                script {
                    def grafanaRunning = sh(script: 'docker ps -q -f name=grafana', returnStdout: true).trim()
                    if (grafanaRunning) {
                        echo 'Grafana is already running.'
                    } else {
                        echo 'Starting Grafana container...'
                        sh 'docker start grafana'
                    }
                }
            }
        }
    }
}
